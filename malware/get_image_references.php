<?php

header('Content-Type: application/json');

$applog = 'app.log';
$logger = fopen($applog, 'a');

function logMessage($message) {
    global $logger;
    $timestamp = date('Y-m-d H:i:s');
    fwrite($logger, $timestamp . ' - ' . $message . "\n");
}

try {
    $imagePath = __DIR__ . '/malware-image.png'; // Path to the image file
    if (!file_exists($imagePath)) {
        throw new Exception('Image file not found.');
    }

    $eicarPath = __DIR__ . '/eicar.txt'; // Path to the eicar.txt file
    if (!file_exists($eicarPath)) {
        throw new Exception('EICAR file not found.');
    }

    $knownString = file_get_contents($eicarPath); // Read the known string from the file
    if ($knownString === false) {
        throw new Exception('Failed to read EICAR file.');
    }

    $imageData = file_get_contents($imagePath);
    $byteArray = unpack('C*', $imageData); // Convert binary data to an array of bytes

    // Log the byteArray of the image data
    // logMessage('Image data byte array: ' . print_r($byteArray, true));

    // Search for references to reconstruct the known string
    $references = [];
    $knownBytes = array_map('ord', str_split($knownString)); // Convert string to byte array
    $knownLength = count($knownBytes);
    
    // Log the byteArray of the known string
    // logMessage('Known string byte array: ' . print_r($knownBytes, true));

    foreach ($knownBytes as $index => $byte) {
        $key = array_search($byte, $byteArray, true); // Search for the byte in the image data
        if ($key) {
            $references[] = $key - 1; // Adjust for 1-based indexing in unpack()
        } else {
            throw new Exception("Byte {$byte} from the known string not found in the image.");
        }
    }

    if (empty($references)) {
        throw new Exception('Known string not found in the image.');
    }

    echo json_encode([
        'success' => true,
        'references' => $references
    ]);
} catch (Exception $e) {
    echo json_encode([
        'success' => false,
        'message' => $e->getMessage()
    ]);
}
?>
